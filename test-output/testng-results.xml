<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="16" total="30" passed="14">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="471142" started-at="2020-09-13T11:12:56Z" finished-at="2020-09-13T11:20:47Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="471142" started-at="2020-09-13T11:12:56Z" finished-at="2020-09-13T11:20:47Z">
      <class name="TestNG.TestNGClass">
        <test-method status="PASS" signature="startTest()[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="startTest" is-config="true" duration-ms="117" started-at="2020-09-13T13:12:56Z" finished-at="2020-09-13T13:12:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="29998" started-at="2020-09-13T13:12:56Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:13:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafz]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01007100243]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aaly100@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="20" started-at="2020-09-13T13:13:26Z" finished-at="2020-09-13T13:13:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=SUCCESS method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="FAIL" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="13007" started-at="2020-09-13T13:13:26Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:13:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[moustafa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01007100244]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustadfa.k.aly101@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at TestNG.TestNGClass.signUpRegister(TestNGClass.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:663)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:849)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1157)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1200)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1125)
	at org.testng.TestNG.run(TestNG.java:1033)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="1" started-at="2020-09-13T13:13:39Z" finished-at="2020-09-13T13:13:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=FAILURE method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="PASS" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="17268" started-at="2020-09-13T13:13:39Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:13:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01007100245]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aly102@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="1" started-at="2020-09-13T13:13:56Z" finished-at="2020-09-13T13:13:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=SUCCESS method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="FAIL" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="13291" started-at="2020-09-13T13:13:56Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa@]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01007100246]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aly103@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at TestNG.TestNGClass.signUpRegister(TestNGClass.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:663)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:849)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1157)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1200)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1125)
	at org.testng.TestNG.run(TestNG.java:1033)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="1" started-at="2020-09-13T13:14:10Z" finished-at="2020-09-13T13:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=FAILURE method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="FAIL" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="13696" started-at="2020-09-13T13:14:10Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:14:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01007100247]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aly104@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at TestNG.TestNGClass.signUpRegister(TestNGClass.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:663)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:849)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1157)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1200)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1125)
	at org.testng.TestNG.run(TestNG.java:1033)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="17780" started-at="2020-09-13T13:14:23Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:14:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[aly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01007100248]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aly104@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="0" started-at="2020-09-13T13:14:23Z" finished-at="2020-09-13T13:14:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=FAILURE method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="1" started-at="2020-09-13T13:14:41Z" finished-at="2020-09-13T13:14:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=SUCCESS method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="PASS" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="16898" started-at="2020-09-13T13:14:41Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:14:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01007100249]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aly105@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="0" started-at="2020-09-13T13:14:58Z" finished-at="2020-09-13T13:14:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=SUCCESS method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="FAIL" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="12522" started-at="2020-09-13T13:14:58Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:15:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly*]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01007100250]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aly106@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at TestNG.TestNGClass.signUpRegister(TestNGClass.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:663)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:849)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1157)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1200)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1125)
	at org.testng.TestNG.run(TestNG.java:1033)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="FAIL" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="12962" started-at="2020-09-13T13:15:11Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:15:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01007100251]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aly107@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at TestNG.TestNGClass.signUpRegister(TestNGClass.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:663)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:849)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1157)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1200)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1125)
	at org.testng.TestNG.run(TestNG.java:1033)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="0" started-at="2020-09-13T13:15:11Z" finished-at="2020-09-13T13:15:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=FAILURE method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="0" started-at="2020-09-13T13:15:24Z" finished-at="2020-09-13T13:15:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=FAILURE method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="FAIL" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="14885" started-at="2020-09-13T13:15:24Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:15:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Moustafa]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01007100252]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aly108@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at TestNG.TestNGClass.signUpRegister(TestNGClass.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:663)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:849)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1157)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1200)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1125)
	at org.testng.TestNG.run(TestNG.java:1033)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="2" started-at="2020-09-13T13:15:38Z" finished-at="2020-09-13T13:15:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=FAILURE method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="FAIL" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="12104" started-at="2020-09-13T13:15:38Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:15:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[abdjdflsfjea]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aly109@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at TestNG.TestNGClass.signUpRegister(TestNGClass.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:663)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:849)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1157)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1200)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1125)
	at org.testng.TestNG.run(TestNG.java:1033)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="0" started-at="2020-09-13T13:15:51Z" finished-at="2020-09-13T13:15:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=FAILURE method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="FAIL" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="13764" started-at="2020-09-13T13:15:51Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:16:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0100710025&]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aly110@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at TestNG.TestNGClass.signUpRegister(TestNGClass.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:663)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:849)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1157)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1200)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1125)
	at org.testng.TestNG.run(TestNG.java:1033)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="0" started-at="2020-09-13T13:16:04Z" finished-at="2020-09-13T13:16:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=FAILURE method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="FAIL" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="12988" started-at="2020-09-13T13:16:04Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:16:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01007a00255]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aly111@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at TestNG.TestNGClass.signUpRegister(TestNGClass.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:663)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:849)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1157)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1200)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1125)
	at org.testng.TestNG.run(TestNG.java:1033)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="0" started-at="2020-09-13T13:16:17Z" finished-at="2020-09-13T13:16:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=FAILURE method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="FAIL" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="12562" started-at="2020-09-13T13:16:17Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:16:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0100710025]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aly112@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at TestNG.TestNGClass.signUpRegister(TestNGClass.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:663)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:849)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1157)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1200)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1125)
	at org.testng.TestNG.run(TestNG.java:1033)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="FAIL" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="13516" started-at="2020-09-13T13:16:30Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:16:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[010071002578]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aly113@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at TestNG.TestNGClass.signUpRegister(TestNGClass.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:663)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:849)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1157)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1200)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1125)
	at org.testng.TestNG.run(TestNG.java:1033)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="0" started-at="2020-09-13T13:16:30Z" finished-at="2020-09-13T13:16:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=FAILURE method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="PASS" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="17437" started-at="2020-09-13T13:16:43Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:17:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aly114@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="0" started-at="2020-09-13T13:16:43Z" finished-at="2020-09-13T13:16:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=FAILURE method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="1" started-at="2020-09-13T13:17:01Z" finished-at="2020-09-13T13:17:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=SUCCESS method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="PASS" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="17359" started-at="2020-09-13T13:17:01Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:17:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01007100259]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aly115gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="17086" started-at="2020-09-13T13:17:18Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:17:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01007100260]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aly116@]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="0" started-at="2020-09-13T13:17:18Z" finished-at="2020-09-13T13:17:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=SUCCESS method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="1" started-at="2020-09-13T13:17:35Z" finished-at="2020-09-13T13:17:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=SUCCESS method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="PASS" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="17601" started-at="2020-09-13T13:17:35Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:17:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01007100261]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="1" started-at="2020-09-13T13:17:53Z" finished-at="2020-09-13T13:17:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=SUCCESS method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="PASS" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="17578" started-at="2020-09-13T13:17:53Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:18:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01007100262]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aly117]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="1" started-at="2020-09-13T13:18:10Z" finished-at="2020-09-13T13:18:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=SUCCESS method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="FAIL" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="12932" started-at="2020-09-13T13:18:10Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:18:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01007100263]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aly118@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at TestNG.TestNGClass.signUpRegister(TestNGClass.java:197)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:663)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:849)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1157)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1200)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1125)
	at org.testng.TestNG.run(TestNG.java:1033)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="0" started-at="2020-09-13T13:18:23Z" finished-at="2020-09-13T13:18:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=FAILURE method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="PASS" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="18054" started-at="2020-09-13T13:18:23Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:18:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01007100264]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Mk12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="0" started-at="2020-09-13T13:18:41Z" finished-at="2020-09-13T13:18:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=SUCCESS method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="FAIL" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="12968" started-at="2020-09-13T13:18:41Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:18:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01007100265]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aly119@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[abcdefg]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[abcdefg]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at TestNG.TestNGClass.signUpRegister(TestNGClass.java:197)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:663)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:849)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1157)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1200)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1125)
	at org.testng.TestNG.run(TestNG.java:1033)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="0" started-at="2020-09-13T13:18:54Z" finished-at="2020-09-13T13:18:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=FAILURE method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="FAIL" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="12423" started-at="2020-09-13T13:18:54Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:19:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01007100266]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aly120@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ABCDEFH]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[ABCDEFH]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at TestNG.TestNGClass.signUpRegister(TestNGClass.java:197)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:663)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:849)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1157)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1200)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1125)
	at org.testng.TestNG.run(TestNG.java:1033)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="0" started-at="2020-09-13T13:19:07Z" finished-at="2020-09-13T13:19:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=FAILURE method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="FAIL" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="13695" started-at="2020-09-13T13:19:07Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:19:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01007100267]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aly121@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[AbcdefgDK]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[AbcdefgDK]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at TestNG.TestNGClass.signUpRegister(TestNGClass.java:197)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:663)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:849)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1157)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1200)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1125)
	at org.testng.TestNG.run(TestNG.java:1033)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="1" started-at="2020-09-13T13:19:21Z" finished-at="2020-09-13T13:19:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=FAILURE method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="PASS" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="17510" started-at="2020-09-13T13:19:21Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:19:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01007100268]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aly122@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Abcdefg]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Abpgpgre]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="0" started-at="2020-09-13T13:19:38Z" finished-at="2020-09-13T13:19:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=SUCCESS method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="PASS" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="17189" started-at="2020-09-13T13:19:38Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:19:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01007100269]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aly123@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Abcdefg]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="1" started-at="2020-09-13T13:19:55Z" finished-at="2020-09-13T13:19:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=SUCCESS method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="PASS" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="16970" started-at="2020-09-13T13:19:55Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:20:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01007100270]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aly124@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Abcdefg]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="0" started-at="2020-09-13T13:20:12Z" finished-at="2020-09-13T13:20:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=SUCCESS method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="PASS" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="17363" started-at="2020-09-13T13:20:12Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:20:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moustafa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01007100271]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[moustafa.k.aly125@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Abcde]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Abcde]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="0" started-at="2020-09-13T13:20:30Z" finished-at="2020-09-13T13:20:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=SUCCESS method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="FAIL" signature="signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="signUpRegister" duration-ms="17256" started-at="2020-09-13T13:20:30Z" data-provider="DataFromExcel" finished-at="2020-09-13T13:20:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at TestNG.TestNGClass.signUpRegister(TestNGClass.java:197)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:663)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:849)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1157)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1200)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1125)
	at org.testng.TestNG.run(TestNG.java:1033)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpRegister -->
        <test-method status="PASS" signature="getReport(org.testng.ITestResult)[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="getReport" is-config="true" duration-ms="0" started-at="2020-09-13T13:20:47Z" finished-at="2020-09-13T13:20:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpRegister status=FAILURE method=TestNGClass.signUpRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestNG.TestNGClass@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReport -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:TestNG.TestNGClass@1e800aaa]" name="endReport" is-config="true" duration-ms="285" started-at="2020-09-13T13:20:47Z" finished-at="2020-09-13T13:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- TestNG.TestNGClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
